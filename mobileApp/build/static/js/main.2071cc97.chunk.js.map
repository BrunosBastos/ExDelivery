{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","components/Logo.js","stores/utils/persist.js","stores/useShopCartStore.ts","stores/useAuthStore.ts","components/DashboardNavbar.js","components/NavItem.js","consts/userType.js","components/DashboardSidebar.js","components/DashboardLayout.js","components/MainNavbar.js","components/MainLayout.js","utils/getInitials.js","config/index.ts","services/courierService.ts","components/courier/CourierListResults.tsx","pages/CourierList.tsx","services/deliveryService.ts","components/paginator/Paginator.tsx","components/dashboard/LatestOrders.tsx","pages/OrderList.tsx","components/dashboard/AdminLatestOrders.tsx","pages/AdminOrderList.tsx","components/dashboard/LatestProducts.js","pages/Dashboard.js","services/authentService.ts","pages/Login.tsx","pages/NotFound.js","pages/Register.tsx","components/product/ProductCard.tsx","services/productService.ts","__mocks__/products.js","services/supplierService.ts","pages/AddProduct.tsx","pages/AddSupplier.tsx","pages/DeliveryDetails.tsx","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","default","paper","colors","common","white","primary","contrastText","main","text","secondary","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","Logo","props","alt","src","configurePersist","storage","localStorage","persist","purge","containsObject","obj","list","length","id","useShopCartStore","createStore","key","set","products","addProduct","product","s","new_products","found_obj","quantity","push","setProductQuantity","removeProduct","filter","p","removeAllProducts","useAuthStore","token","user","login","state","exit","DashboardNavbar","onMobileNavOpen","rest","useState","navigate","useTheme","useNavigate","hidden","useMediaQuery","breakpoints","up","down","AppBar","elevation","Toolbar","to","Box","sx","flexGrow","IconButton","color","onClick","getState","replace","NavItem","href","Icon","icon","title","useLocation","active","matchPath","path","end","pathname","ListItem","disableGutters","display","py","Button","component","RouterLink","justifyContent","textTransform","mr","size","UserType","items","name","UsersIcon","type","HistoryIcon","DashboardSidebar","onMobileClose","openMobile","hiddenDown","useEffect","content","flexDirection","alignItems","Avatar","avatar","cursor","Typography","variant","jobTitle","Divider","List","item","isSuperUser","userType","isUserType","superUser","map","Drawer","anchor","onClose","open","PaperProps","defaultProps","DashboardLayoutRoot","experimentalStyled","overflow","DashboardLayoutWrapper","flex","paddingTop","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","isMobileNavOpen","setMobileNavOpen","MainNavbar","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","split","slice","v","toUpperCase","join","EXDELIVERY_API_BASE_URL","page","fetch","method","mode","headers","CourierListResults","selectedCourierIds","limit","setLimit","setPage","couriers","setCouriers","CourierService","getCouriers","then","res","console","log","status","json","catch","fireCourier","msg","toast","error","position","POSITION","TOP_CENTER","courier","success","Card","minWidth","Table","TableHead","TableRow","TableCell","TableBody","hover","selected","avatarUrl","getInitials","email","lat","lon","reputation","TablePagination","count","onPageChange","event","newPage","onRowsPerPageChange","target","value","rowsPerPage","rowsPerPageOptions","CourierList","Helmet","minHeight","Container","maxWidth","pt","recent","Paginator","Grid","container","style","spacing","xs","lg","md","changePage","textAlign","pointerEvents","hasNext","LatestOrders","orders","setOrders","DeliveryService","getMyDeliveries","CardHeader","sortDirection","order","purchaseHost","purchaseId","Chip","label","OrderList","setRecent","setOpen","CardContent","InputLabel","Select","labelId","onOpen","onChange","MenuItem","AdminLatestOrders","getDeliveries","AdminOrderList","recentOr","setRecentOr","setEmail","sm","TextField","fullWidth","InputProps","startAdornment","InputAdornment","SvgIcon","placeholder","document","getElementById","uuid","moment","subtract","password","JSON","stringify","notifyError","Login","initialValues","validationSchema","Yup","shape","max","required","onSubmit","values","AuthentService","accessToken","errors","handleBlur","handleChange","handleSubmit","touched","isSubmitting","mb","gutterBottom","helperText","onBlur","Link","NotFound","align","marginTop","BOTTOM_RIGHT","description","address","price","stock","photo","supplier","prodid","imageUrl","root","Register","classes","className","register","formControl","selectEmpty","marginBottom","input","image","styles","overflowX","table","marginLeft","DeliveryDetails","setPrice","delivery","setDelivery","url","delivery_id","substring","lastIndexOf","getDelivery","confirmDelivery","totalPrice","toFixed","getTotalPrice","autoComplete","noValidate","colSpan","alignContent","routes","element","children","App","routing","useRoutes","ThemeProvider","ReactDOM","render","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2071cc97.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","import { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { colors }  from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: '#F4F6F8',\n      paper: colors.common.white\n    },\n    primary: {\n      contrastText: '#ffffff',\n      main: '#5664d2'\n    },\n    text: {\n      primary: '#172b4d',\n      secondary: '#6b778c'\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","const Logo = (props) => (\n  <img\n    alt=\"Logo\"\n    src=\"/static/logo.svg\"\n    {...props}\n  />\n);\n\nexport default Logo;\n","import { configurePersist } from 'zustand-persist'\nconst { persist, purge } = configurePersist({\n  storage: localStorage\n})\nexport default persist\nexport { purge }","import createStore from \"zustand\";\nimport persist from 'src/stores/utils/persist.js';\n\ninterface Supplier {\n    id: number;\n    name: string;\n    lat: number;\n    lon: number;\n}\n\ninterface Product {\n    name: string;\n    id: number;\n    price: number;\n    description: string;\n    image: string;\n    quantity: number;\n    supplier: Supplier;\n}\n\nfunction containsObject(obj: Product, list: Product[]) {\n    for (let i = 0; i < list.length; i++) {\n        if (list[i].id === obj.id) {\n            return [true, i];\n        }\n    }\n    return [false, 0];\n}\n\nconst useShopCartStore = createStore(\n    persist(\n        {\n            key: \"shopCart\",\n        },\n        (set) => ({\n            products: [],\n            \n            addProduct: (product: Product) => {\n                return set((s) => {\n                    const new_products = [...s.products]\n                    const found_obj = containsObject(product, new_products)\n                    if (!found_obj[0]){ \n                        new_products.push(product)\n                    } else {\n                        //@ts-ignore\n                        new_products[found_obj[1]].quantity += 1;\n                    }\n                    return { products: new_products};\n                });\n            },\n            setProductQuantity: (product: Product, quantity: number) => {\n                return set((s) => {\n                    let new_products = [...s.products]\n                    const found_obj = containsObject(product, new_products)\n                    if (found_obj[0]) {\n                        //@ts-ignore\n                        new_products[found_obj[1]].quantity = quantity;\n                    }\n                    return { products: new_products};\n                });\n            },\n            removeProduct: (product: Product) => {\n                return set((s) => {\n                    let new_products = [...s.products]\n                    new_products = new_products.filter(p => p.id != product.id);\n                    return { products: new_products};\n                });\n            },\n            removeAllProducts: () => {\n                return set((s) => {\n                    return { products: []};\n                });\n            }\n        })\n    )\n);\n\nexport default useShopCartStore;\n","import createStore from \"zustand\";\nimport persist from 'src/stores/utils/persist.js';\n\n\ninterface User {\n    name: string;\n    email: string;\n    superUser: boolean;\n    userId: number;\n}\n\n\nconst useAuthStore = createStore(\n    persist(\n        {\n            key:\"auth3\",\n        },\n        (set) => ({\n            token: null,\n            user: null,\n            login: (token: string, user: User) => {\n                set((state) => ({\n                    token: token,\n                    user: user,\n                }))\n            },\n            exit: () => {\n                set((state) => ({\n                    token: null,\n                    user: null,\n                }))\n            }\n        })\n    ),\n)\n\nexport default useAuthStore;","import { useState, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  useTheme,\n  useMediaQuery,\n  IconButton,\n  Toolbar\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport InputIcon from '@material-ui/icons/Input';\nimport Logo from './Logo';\nimport useShopCartStore from 'src/stores/useShopCartStore';\nimport useAuthStore from 'src/stores/useAuthStore';\n\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\n  const [notifications] = useState([]);\n  const products = useShopCartStore(state => state.products);\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const hidden = useMediaQuery(theme => theme.breakpoints.up('lg'));\n  const hiddenDown = useMediaQuery(theme => theme.breakpoints.down('lg'));\n\n  const logout = () => {\n    useAuthStore.getState().exit();\n    navigate('/login', { replace: true });\n  }\n\n  return (\n    <AppBar\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n        <Box sx={{ flexGrow: 1 }} />\n        <IconButton\n          color=\"inherit\"\n          onClick={logout}\n        >\n          <InputIcon />\n        </IconButton>\n        {hidden ? null :\n          <IconButton\n            color=\"inherit\"\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        }\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nDashboardNavbar.propTypes = {\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default DashboardNavbar;\n","import {\n  NavLink as RouterLink,\n  matchPath,\n  useLocation\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, ListItem } from '@material-ui/core';\n\nconst NavItem = ({\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const location = useLocation();\n\n  const active = href ? !!matchPath({\n    path: href,\n    end: false\n  }, location.pathname) : false;\n\n  return (\n    <ListItem\n      disableGutters\n      sx={{\n        display: 'flex',\n        py: 0\n      }}\n      {...rest}\n    >\n      <Button\n        component={RouterLink}\n        sx={{\n          color: 'text.secondary',\n          fontWeight: 'medium',\n          justifyContent: 'flex-start',\n          letterSpacing: 0,\n          py: 1.25,\n          textTransform: 'none',\n          width: '100%',\n          ...(active && {\n            color: 'primary.main'\n          }),\n          '& svg': {\n            mr: 1\n          }\n        }}\n        to={href}\n      >\n        {Icon && (\n          <Icon size=\"20\" />\n        )}\n        <span>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","export const UserType = {\n    ADMIN: 'ADMIN',\n    CLIENT: 'CLIENT',\n    ANY: 'ANY',\n}\n\nexport const isUserType = (isSuperUser, userType) => {\n    switch (userType) {\n        case UserType.ADMIN:\n            return isSuperUser;\n        case UserType.CLIENT:\n            return !isSuperUser;\n        case UserType.ANY:\n            return true;\n    }\n}","import { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Drawer,\n  useMediaQuery,\n  useTheme,\n  List,\n  Typography\n} from '@material-ui/core';\nimport {\n  AlertCircle as AlertCircleIcon,\n  BarChart as BarChartIcon,\n  Lock as LockIcon,\n  Package as PackageIcon,\n  PlusCircle as PlusCircleIcon,\n  Settings as SettingsIcon,\n  ShoppingBag as ShoppingBagIcon,\n  User as UserIcon,\n  UserPlus as UserPlusIcon,\n  Users as UsersIcon\n} from 'react-feather';\nimport NavItem from './NavItem';\nimport HistoryIcon from '@material-ui/icons/History';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport LocalPharmacyIcon from '@material-ui/icons/LocalPharmacy';\nimport { UserType, isUserType } from \"src/consts/userType\";\nimport useAuthStore from 'src/stores/useAuthStore';\n\nconst user = {\n  avatar: '/static/images/avatars/default_avatar.jpg',\n  jobTitle: '',\n  name: useAuthStore.getState().user?.name\n};\n\nconst items = [\n  // {\n  //   href: '/app/dashboard',\n  //   icon: BarChartIcon,\n  //   title: 'Dashboard',\n  //   type: UserType.ANY,\n  // },\n  {\n    href: '/app/couriers',\n    icon: UsersIcon,\n    title: 'Couriers',\n    type: UserType.ADMIN,\n  },\n  {\n    href: '/app/orders',\n    icon: HistoryIcon,\n    title: 'Orders',\n    type: UserType.CLIENT,\n  },\n  {\n    href: '/app/adminOrders',\n    icon: HistoryIcon,\n    title: 'Platform Orders',\n    type: UserType.ADMIN,\n  },\n];\n\nconst DashboardSidebar = ({ onMobileClose, openMobile }) => {\n  const location = useLocation();\n  const theme = useTheme();\n  const user = useAuthStore(state => state.user);\n  const hidden = useMediaQuery(theme => theme.breakpoints.up('lg'));\n  const hiddenDown = useMediaQuery(theme => theme.breakpoints.down('lg'));\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n  }, [location.pathname]);\n\n  const content = (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      }}\n    >\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexDirection: 'column',\n          p: 2\n        }}\n      >\n        <Avatar\n          component={RouterLink}\n          src={user.avatar}\n          sx={{\n            cursor: 'pointer',\n            width: 64,\n            height: 64\n          }}\n          to=\"/app/account\"\n        />\n        <Typography\n          color=\"textPrimary\"\n          variant=\"h5\"\n        >\n          {user.name}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {user.jobTitle}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box sx={{ p: 2 }}>\n        <List>\n          {items.filter((item) => isUserType(user.superUser, item.type))\n            .map((item) => (\n              <NavItem\n                href={item.href}\n                key={item.title}\n                title={item.title}\n                icon={item.icon}\n              />\n            ))}\n        </List>\n      </Box>\n    </Box>\n  );\n\n  return (\n    <>\n      {hidden ? null :\n        <Drawer\n          anchor=\"left\"\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n          PaperProps={{\n            sx: {\n              width: 256\n            }\n          }}\n        >\n          {content}\n        </Drawer>\n      }\n      {hiddenDown ? null :\n        <Drawer\n          anchor=\"left\"\n          open\n          variant=\"persistent\"\n          PaperProps={{\n            sx: {\n              width: 256,\n              top: 64,\n              height: 'calc(100% - 64px)'\n            }\n          }}\n        >\n          {content}\n        </Drawer>\n      }\n    </>\n  );\n};\n\nDashboardSidebar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nDashboardSidebar.defaultProps = {\n  onMobileClose: () => { },\n  openMobile: false\n};\n\nexport default DashboardSidebar;\n","import { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { experimentalStyled } from '@material-ui/core';\nimport DashboardNavbar from './DashboardNavbar';\nimport DashboardSidebar from './DashboardSidebar';\n\nconst DashboardLayoutRoot = experimentalStyled('div')(\n  ({ theme }) => ({\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  })\n);\n\nconst DashboardLayoutWrapper = experimentalStyled('div')(\n  ({ theme }) => ({\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  })\n);\n\nconst DashboardLayoutContainer = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden'\n});\n\nconst DashboardLayoutContent = experimentalStyled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto'\n});\n\nconst DashboardLayout = () => {\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <DashboardLayoutRoot>\n      <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <DashboardSidebar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <DashboardLayoutWrapper>\n        <DashboardLayoutContainer>\n          <DashboardLayoutContent>\n            <Outlet />\n          </DashboardLayoutContent>\n        </DashboardLayoutContainer>\n      </DashboardLayoutWrapper>\n    </DashboardLayoutRoot>\n  );\n};\n\nexport default DashboardLayout;\n","import { Link as RouterLink } from 'react-router-dom';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport Logo from './Logo';\n\nconst MainNavbar = (props) => (\n  <AppBar\n    elevation={0}\n    {...props}\n  >\n    <Toolbar sx={{ height: 64 }}>\n      <RouterLink to=\"/\">\n        <Logo />\n      </RouterLink>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default MainNavbar;\n","import { Outlet } from 'react-router-dom';\nimport { experimentalStyled } from '@material-ui/core';\nimport MainNavbar from './MainNavbar';\n\nconst MainLayoutRoot = experimentalStyled('div')(\n  ({ theme }) => ({\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  })\n);\n\nconst MainLayoutWrapper = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n  paddingTop: 64\n});\n\nconst MainLayoutContainer = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden'\n});\n\nconst MainLayoutContent = experimentalStyled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto'\n});\n\nconst MainLayout = () => (\n  <MainLayoutRoot>\n    <MainNavbar />\n    <MainLayoutWrapper>\n      <MainLayoutContainer>\n        <MainLayoutContent>\n          <Outlet />\n        </MainLayoutContent>\n      </MainLayoutContainer>\n    </MainLayoutWrapper>\n  </MainLayoutRoot>\n);\n\nexport default MainLayout;\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","export const EXDELIVERY_API_BASE_URL: string = 'http://192.168.160.231:8081/api/v1/';","import { EXDELIVERY_API_BASE_URL } from '../config/index';\nimport useAuthStore from 'src/stores/useAuthStore';\n\n\nclass CourierService {\n\n    getCouriers(page){\n        return fetch(EXDELIVERY_API_BASE_URL + 'couriers?page='+page, {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n                'accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization' : \"Bearer \"+ useAuthStore.getState().token\n            }\n        })\n    }\n\n    fireCourier(id){\n        return fetch(EXDELIVERY_API_BASE_URL + 'couriers/'+id, {\n            method: 'PUT',\n            mode: 'cors',\n            headers: {\n                'accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization' : \"Bearer \"+ useAuthStore.getState().token\n            }\n        })\n    }\n}\n\nexport default new CourierService();","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { toast } from 'react-toastify';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Button,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\nimport CourierService from 'src/services/courierService';\n\nconst notifySuccess = (msg) => {\n  toast.success(msg, {\n      position: toast.POSITION.TOP_CENTER\n  });\n}\n\nconst notifyError = (msg) => {\n  toast.error(msg, {\n      position: toast.POSITION.TOP_CENTER\n  });\n}\n\n\nconst CourierListResults = () => {\n  const [selectedCourierIds, setSelectedCourierIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const [couriers, setCouriers] = useState([])\n\n  useEffect(() => {\n    CourierService.getCouriers(page)\n      .then((res) => {\n        console.log(res)\n        if (res.status == 200) {\n          return res.json()\n        }\n        return null\n      })\n      .then((res) => {\n        console.log(res)\n        if (res) {\n          setCouriers(res)\n        }\n      })\n      .catch(() => {\n        console.log(\"Something went wrong\")\n      })\n  }, [])\n\n  const fireCourier = (id) => {\n    CourierService.fireCourier(id)\n      .then((res) => {\n        console.log(res)\n        if (res.status == 200) {\n          return res.json()\n        }\n        notifyError(\"Something went wrong\")\n        return null\n      })\n      .then((res) => {\n        console.log(res)\n        if (res) {\n          setCouriers(couriers => couriers.filter( courier => courier.id != res.id ))\n          notifySuccess(\"Successfully fired this courier.\")\n        }\n      })\n      .catch(() => {\n        console.log(\"Something went wrong\")\n      })\n  }\n\n  const handleSelectAll = (event) => {\n    let newSelectedCourierIds;\n\n    if (event.target.checked) {\n      newSelectedCourierIds = couriers.map((courier) => courier.id);\n    } else {\n      newSelectedCourierIds = [];\n    }\n\n    setSelectedCourierIds(newSelectedCourierIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCourierIds.indexOf(id);\n    let newSelectedCourierIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCourierIds = newSelectedCourierIds.concat(selectedCourierIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCourierIds = newSelectedCourierIds.concat(selectedCourierIds.slice(1));\n    } else if (selectedIndex === selectedCourierIds.length - 1) {\n      newSelectedCourierIds = newSelectedCourierIds.concat(selectedCourierIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCourierIds = newSelectedCourierIds.concat(\n        selectedCourierIds.slice(0, selectedIndex),\n        selectedCourierIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCourierIds(newSelectedCourierIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Card>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 750 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Reference\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Email\n                </TableCell>\n                <TableCell>\n                  Location\n                </TableCell>\n                <TableCell>\n                  Reputation\n                </TableCell>\n                <TableCell>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {couriers.slice(0, limit).map((courier) => (\n                <TableRow\n                  hover\n                  key={courier.id}\n                  selected={selectedCourierIds.indexOf(courier.id) !== -1}\n                >\n                  <TableCell>\n                    {courier.id}\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      sx={{\n                        alignItems: 'center',\n                        display: 'flex'\n                      }}\n                    >\n                      <Avatar\n                        src={courier.avatarUrl}\n                        sx={{ mr: 2 }}\n                      >\n                        {getInitials(courier.user?.name)}\n                      </Avatar>\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {courier.user?.name}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {courier.user?.email}\n                  </TableCell>\n                  <TableCell>\n                    <p>Latitude: {courier.lat}</p>\n                    <p>Longitude: {courier.lon}</p>\n                  </TableCell>\n                  <TableCell>\n                    {courier.reputation}\n                  </TableCell>\n                  <TableCell>\n                    <Button\n                      color=\"secondary\"\n                      variant=\"contained\"\n                      onClick={() => fireCourier(courier.id)}\n                    >\n                      Fire\n                    </Button> \n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={couriers.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[10]}\n      />\n    </Card>\n  );\n};\n\nCourierListResults.propTypes = {\n  couriers: PropTypes.array.isRequired\n};\n\nexport default CourierListResults;","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\nimport CourierListResults from 'src/components/courier/CourierListResults';\n\nconst CourierList = () => {\n  return (\n  <>\n    <Helmet>\n      <title>Couriers</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <Box sx={{ pt: 3 }}>\n          <CourierListResults />\n        </Box>\n      </Container>\n    </Box>\n  </>\n  );\n}\n\nexport default CourierList;","import { EXDELIVERY_API_BASE_URL } from '../config/index';\nimport useAuthStore from 'src/stores/useAuthStore';\n\n\nclass DeliveryService {\n\n    getMyDeliveries(page, recent){\n        return fetch(EXDELIVERY_API_BASE_URL + 'deliveries/me?page='+page+'&recent='+recent, {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n                'accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization' : \"Bearer \"+ useAuthStore.getState().token\n            }\n        })\n    }\n\n    getDeliveries(page, recent, email){\n        let url = email ? '&courierEmail='+email : ''\n        return fetch(EXDELIVERY_API_BASE_URL + 'deliveries?page='+page+'&recent='+recent+url, {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n                'accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization' : \"Bearer \"+ useAuthStore.getState().token\n            }\n        })\n    }\n\n    getDelivery(id) {\n        return fetch(EXDELIVERY_API_BASE_URL + 'deliveries/'+id, {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n                'accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization' : \"Bearer \"+ useAuthStore.getState().token\n            }\n        })\n    }\n\n    confirmDelivery(id) {\n        return fetch(EXDELIVERY_API_BASE_URL + 'deliveries/'+id, {\n            method: 'PUT',\n            mode: 'cors',\n            headers: {\n                'accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization' : \"Bearer \"+ useAuthStore.getState().token\n            }\n        })\n    }\n}\n\nexport default new DeliveryService();","import React from 'react';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport {\n    Button,\n    Grid,\n  } from '@material-ui/core';\n\nexport default function Paginator(props) {\n\n    return (\n        <Grid container style={{flexGrow: 1}} spacing={3}>\n            <Grid\n              item\n              xs={12}\n              pt={50}\n            >\n                <Grid container >\n                    <Grid\n                    item\n                    lg={1}\n                    md={1}\n                    xs={1}\n                    >\n                        {props.page !== 0 ? <ArrowBackIosIcon onClick={() => props.changePage(props.page - 1)} style={{cursor: 'pointer', color: 'rgb(0 6 255)'}} /> : <></> }\n                    </Grid>\n                    <Grid\n                    item\n                    lg={10}\n                    md={10}\n                    xs={10}\n                    style={{textAlign:'center', maxWidth: \"100%\"}}\n                    >\n                        <Button style={{color: 'white', pointerEvents: 'none', background: 'rgb(0, 135, 255)'}}>\n                            Page {props.page}\n                        </Button>\n                    </Grid>\n                    <Grid\n                    item\n                    lg={1}\n                    md={1}\n                    xs={1}\n                    >\n                        {props.hasNext ? <ArrowForwardIosIcon onClick={() => props.changePage(props.page + 1)} style={{cursor: 'pointer', color: 'rgb(0 6 255)'}} /> : <></>}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}","import { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Chip,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  TablePagination,\n  Tooltip\n} from '@material-ui/core';\nimport DeliveryService from \"src/services/deliveryService\";\nimport { toast } from 'react-toastify';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport Paginator from \"src/components/paginator/Paginator\";\n\n\ninterface Order {\n  id: any;\n  lat: number;\n  lon: number;\n  purchaseHost: string;\n  purchaseId: number;\n  state: string;\n}\n\nconst notifySuccess = (msg) => {\n  toast.success(msg, {\n    position: toast.POSITION.TOP_CENTER\n    });\n}\n\nconst notifyError = (msg) => {\n  toast.error(msg, {\n    position: toast.POSITION.TOP_CENTER\n    });\n}\n\ninterface LatestOrdersProps {\n  recent: string;\n}\n\nconst LatestOrders: React.FC<LatestOrdersProps> = ({recent}) => {\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const [orders, setOrders] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    DeliveryService.getMyDeliveries(page, recent == 'desc')\n      .then( (res) => {\n        if (res.status === 200) {\n          return res.json()\n        }\n        notifyError(\"Something went wrong\")\n        return null;\n      })\n      .then((res) => {\n        if (res) {\n          setOrders(res)\n        }\n      })\n      .catch(() => {\n        console.log(\"Something went wrong\")\n      })\n  }, [recent, page])\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n    setPage(0);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Card>\n      <CardHeader title=\"Latest Orders\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 800 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell sortDirection={recent === 'asc'  ? 'asc' : 'desc'}>\n                  Reference\n                </TableCell>\n                <TableCell>\n                  Delivery Location\n                </TableCell>\n                <TableCell>\n                  Purchase Host\n                </TableCell>\n                <TableCell>\n                  Purchase Id\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders && orders.slice(page*limit, page*limit + limit).map((order: Order, index) => (\n                <TableRow\n                  hover\n                  key={order.id+recent}\n                  style={{cursor:'pointer'}}\n                  onClick={() => navigate('/app/delivery/'+order.id, { replace: true })}\n                \n                >\n                  <TableCell>\n                    {order.id}\n                  </TableCell>\n                  <TableCell>\n                    <p>Latitude {order.lat}</p>\n                    <p>Longitude {order.lon}</p>\n                  </TableCell>\n                  <TableCell>\n                    {order.purchaseHost}\n                  </TableCell>\n                  <TableCell>\n                    {order.purchaseId}\n                  </TableCell>\n                  <TableCell>\n                    <Chip\n                      color=\"primary\"\n                      label={order.state}\n                      size=\"small\"\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        }}\n      >\n        <Paginator hasNext={orders.length == limit} page={page} changePage={(page) => setPage(page)}/>\n      </Box>\n    </Card>\n  )\n}\n\nexport default LatestOrders;","import { Helmet } from 'react-helmet';\nimport { v4 as uuid } from 'uuid';\nimport { useState } from 'react';\nimport { \n  Box,\n  Container, \n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon\n } from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n//@ts-ignore\nimport LatestOrders from 'src/components/dashboard//LatestOrders.tsx';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n\nconst OrderList = () => {\n  const [recent, setRecent] = useState(\"asc\");\n  const [open, setOpen] = useState(false);\n\n  const handleChange = (event) => {\n    setRecent(event.target.value)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n  <>\n    <Helmet>\n      <title>My Orders</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <Card>\n          <CardContent>\n            <Box sx={{ maxWidth: 500 }}>\n            <InputLabel id=\"demo-controlled-open-select-label\">Order Deliveries</InputLabel>\n            <Select\n              labelId=\"demo-controlled-open-select-label\"\n              id=\"demo-controlled-open-select\"\n              open={open}\n              onClose={handleClose}\n              onOpen={handleOpen}\n              value={recent}\n              onChange={handleChange}\n            >\n              <MenuItem value={\"asc\"}>Ascending</MenuItem>\n              <MenuItem value={\"desc\"}>Descending</MenuItem>\n            </Select>\n            </Box>\n          </CardContent>\n        </Card>\n        <Box sx={{ pt: 3 }}>\n          <LatestOrders recent={recent}/>\n        </Box>\n      </Container>\n    </Box>\n  </>\n  );\n}\n\nexport default OrderList;","import { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Chip,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  TablePagination,\n  Tooltip\n} from '@material-ui/core';\nimport DeliveryService from \"src/services/deliveryService\";\nimport { toast } from 'react-toastify';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport Paginator from \"src/components/paginator/Paginator\";\n\n\n\ninterface Order {\n  id: any;\n  lat: number;\n  lon: number;\n  purchaseHost: string;\n  purchaseId: number;\n  state: string;\n  courier: {\n    id: any;\n    lat: number;\n    lon: number;\n    reputation: number;\n    user: {\n      email: string;\n      name: string;\n      superUser: boolean;\n      userId: any;\n    }\n  };\n}\n\nconst notifySuccess = (msg) => {\n  toast.success(msg, {\n    position: toast.POSITION.TOP_CENTER\n    });\n}\n\nconst notifyError = (msg) => {\n  toast.error(msg, {\n    position: toast.POSITION.TOP_CENTER\n    });\n}\n\ninterface AdminLatestOrdersProps {\n  recent: string;\n  email: string;\n}\n\nconst AdminLatestOrders: React.FC<AdminLatestOrdersProps> = ({recent, email}) => {\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const [orders, setOrders] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    DeliveryService.getDeliveries(page, recent == 'desc', email)\n      .then( (res) => {\n        if (res.status === 200) {\n          return res.json()\n        }\n        notifyError(\"Something went wrong\")\n        return null;\n      })\n      .then((res) => {\n        console.log(res)\n        if (res) {\n          setOrders(res)\n        }\n      })\n      .catch(() => {\n        console.log(\"Something went wrong\")\n      })\n  }, [recent, email, page])\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n    setPage(0);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Card>\n      <CardHeader title=\"Latest Orders\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 800 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell sortDirection={recent === 'asc'  ? 'asc' : 'desc'}>\n                  Reference\n                </TableCell>\n                <TableCell>\n                  Delivery Location\n                </TableCell>\n                <TableCell>\n                  Courier Email\n                </TableCell>\n                <TableCell>\n                  Purchase Host\n                </TableCell>\n                <TableCell>\n                  Purchase Id\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders && orders.slice(page*limit, page*limit + limit).map((order: Order, index) => (\n                <TableRow\n                  hover\n                  key={order.id+recent}\n                  style={{cursor:'pointer'}}\n                  onClick={() => navigate('/app/delivery/'+order.id, { replace: true })}\n                >\n                  <TableCell>\n                    {order.id}\n                  </TableCell>\n                  <TableCell>\n                    <p>Latitude {order.lat}</p>\n                    <p>Longitude {order.lon}</p>\n                  </TableCell>\n                  <TableCell>\n                    {order.courier?.user?.email}\n                  </TableCell>\n                  <TableCell>\n                    {order.purchaseHost}\n                  </TableCell>\n                  <TableCell>\n                    {order.purchaseId}\n                  </TableCell>\n                  <TableCell>\n                    <Chip\n                      color=\"primary\"\n                      label={order.state}\n                      size=\"small\"\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        }}\n      >\n        <Paginator hasNext={orders.length == limit} page={page} changePage={(page) => setPage(page)}/>\n      </Box>\n    </Card>\n  )\n}\n\nexport default AdminLatestOrders;","import { Helmet } from 'react-helmet';\nimport { v4 as uuid } from 'uuid';\nimport { useState } from 'react';\nimport { \n  Box,\n  Container, \n  Card,\n  CardContent,\n  Button,\n  TextField,\n  Grid,\n  InputAdornment,\n  SvgIcon\n } from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n//@ts-ignore\nimport AdminLatestOrders from 'src/components/dashboard//AdminLatestOrders.tsx';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n\nconst AdminOrderList = () => {\n  const [recent, setRecent] = useState(\"asc\");\n  const [recentOr, setRecentOr] = useState(\"asc\");\n  const [open, setOpen] = useState(false);\n  const [email, setEmail] = useState(\"\");\n\n  const handleChange = (event) => {\n    setRecent(event.target.value)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const updateValues = () => {\n    //@ts-ignore\n    setEmail(document.getElementById(\"courierEmail\").value);\n    setRecentOr(recent); \n  }\n\n  return (\n  <>\n    <Helmet>\n      <title>Platform Orders</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <Card>\n          <CardContent>\n                <Grid\n                    container\n                    xs={12}\n                    >\n                    <Grid\n                        item\n                        sm={6}\n                        xs={12}\n                        style={{textAlign: 'center', margin: 'auto'}}\n                    > \n                        <TextField\n                            fullWidth\n                            id=\"courierEmail\"\n                            InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                <SvgIcon\n                                    fontSize=\"small\"\n                                    color=\"action\"\n                                >\n                                    <SearchIcon />\n                                </SvgIcon>\n                                </InputAdornment>\n                            )\n                            }}\n                            placeholder=\"Search By Courier Email\"\n                            variant=\"outlined\"\n                        />\n                    </Grid>\n                    <Grid\n                        item\n                        sm={3}\n                        xs={12}\n                        style={{textAlign: 'center', margin: 'auto'}}\n                    > \n                        <InputLabel id=\"demo-controlled-open-select-label\">Order Deliveries</InputLabel>\n                        <Select\n                        labelId=\"demo-controlled-open-select-label\"\n                        id=\"demo-controlled-open-select\"\n                        open={open}\n                        onClose={handleClose}\n                        onOpen={handleOpen}\n                        value={recent}\n                        onChange={handleChange}\n                        >\n                        <MenuItem value={\"asc\"}>Ascending</MenuItem>\n                        <MenuItem value={\"desc\"}>Descending</MenuItem>\n                        </Select>\n                    </Grid>\n                    <Grid\n                        item\n                        sm={3}\n                        xs={12}\n                        style={{textAlign: 'center', margin: 'auto'}}\n                    > \n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"large\"\n                            onClick= {() => updateValues()}\n                        >\n                            Search\n                        </Button>\n                    </Grid>\n                </Grid>\n          </CardContent>\n        </Card>\n        <Box sx={{ pt: 3 }}>\n          <AdminLatestOrders recent={recentOr} email={email}/>\n        </Box>\n      </Container>\n    </Box>\n  </>\n  );\n}\n\nexport default AdminOrderList;","import { v4 as uuid } from 'uuid';\nimport moment from 'moment';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst products = [\n  {\n    id: uuid(),\n    name: 'Dropbox',\n    imageUrl: '/static/images/products/product_1.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Medium Corporation',\n    imageUrl: '/static/images/products/product_2.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Slack',\n    imageUrl: '/static/images/products/product_3.png',\n    updatedAt: moment().subtract(3, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Lyft',\n    imageUrl: '/static/images/products/product_4.png',\n    updatedAt: moment().subtract(5, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'GitHub',\n    imageUrl: '/static/images/products/product_5.png',\n    updatedAt: moment().subtract(9, 'hours')\n  }\n];\n\nconst LatestProducts = (props) => (\n  <Card {...props}>\n    <CardHeader\n      subtitle={`${products.length} in total`}\n      title=\"Latest Products\"\n    />\n    <Divider />\n    <List>\n      {products.map((product, i) => (\n        <ListItem\n          divider={i < products.length - 1}\n          key={product.id}\n        >\n          <ListItemAvatar>\n            <img\n              alt={product.name}\n              src={product.imageUrl}\n              style={{\n                height: 48,\n                width: 48\n              }}\n            />\n          </ListItemAvatar>\n          <ListItemText\n            primary={product.name}\n            secondary={`Updated ${product.updatedAt.fromNow()}`}\n          />\n          <IconButton\n            edge=\"end\"\n            size=\"small\"\n          >\n            <MoreVertIcon />\n          </IconButton>\n        </ListItem>\n      ))}\n    </List>\n    <Divider />\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end',\n        p: 2\n      }}\n    >\n      <Button\n        color=\"primary\"\n        endIcon={<ArrowRightIcon />}\n        size=\"small\"\n        variant=\"text\"\n      >\n        View all\n      </Button>\n    </Box>\n  </Card>\n);\n\nexport default LatestProducts;\n","import { Helmet } from 'react-helmet';\nimport { v4 as uuid } from 'uuid';\nimport {\n  Box,\n  Container,\n  Grid\n} from '@material-ui/core';\nimport Budget from 'src/components/dashboard//Budget';\nimport LatestOrders from 'src/components/dashboard//LatestOrders.tsx';\nimport LatestProducts from 'src/components/dashboard//LatestProducts';\nimport Sales from 'src/components/dashboard//Sales';\nimport TasksProgress from 'src/components/dashboard//TasksProgress';\nimport TotalCouriers from 'src/components/dashboard//TotalCouriers';\nimport TotalProfit from 'src/components/dashboard//TotalProfit';\nimport TrafficByDevice from 'src/components/dashboard//TrafficByDevice';\n\n\nconst orders = [\n  {\n    id: uuid(),\n    ref: 'CDD1049',\n    amount: 30.5,\n    product: {\n      name: 'Ekaterina Tankova'\n    },\n    delLocation: 'Oliveira de Azeméis',\n    createdAt: 1595016400000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1048',\n    amount: 25.1,\n    product: {\n      name: 'Cao Yu'\n    },\n    delLocation: 'Oliveira de Azeméis',\n    createdAt: 1555016400000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1047',\n    amount: 10.99,\n    product: {\n      name: 'Alexa Richardson'\n    },\n    delLocation: 'São João da Madeira',\n    createdAt: 1554930000000,\n    status: 'refunded'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1046',\n    amount: 96.43,\n    product: {\n      name: 'Anje Keizer'\n    },\n    delLocation: 'São João da Madeira',\n    createdAt: 1554757200000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1045',\n    amount: 32.54,\n    product: {\n      name: 'Clarke Gillebert'\n    },\n    delLocation: 'Mangualde',\n    createdAt: 1554670800000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1044',\n    amount: 16.76,\n    product: {\n      name: 'Adam Denisov'\n    },\n    delLocation: 'Casa do Leandro',\n    createdAt: 1554172800000,\n    status: 'delivered'\n  }\n];\n\nconst Dashboard = () => (\n  <>\n    <Helmet>\n      <title>Dashboard | Material Kit</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <Budget />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalCouriers />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TasksProgress />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalProfit sx={{ height: '100%' }} />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <Sales />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <TrafficByDevice sx={{ height: '100%' }} />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <LatestProducts sx={{ height: '100%' }} />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <LatestOrders orders={orders}/>\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default Dashboard;","import { EXDELIVERY_API_BASE_URL } from '../config/index';\n\nclass AuthentService {\n    login(email, password) {\n        return fetch(EXDELIVERY_API_BASE_URL + 'login', {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                'accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ email: email, password: password })\n        })\n    }\n\n    register(email, password, name) {\n        return fetch(EXDELIVERY_API_BASE_URL + 'register', {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ name: name, email: email, password: password })\n        })\n    }\n}\nexport default new AuthentService()","import { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport FacebookIcon from 'src/icons/Facebook';\nimport GoogleIcon from 'src/icons/Google';\nimport AuthentService from 'src/services/authentService';\nimport useAuthStore from 'src/stores/useAuthStore';\nimport { toast } from 'react-toastify';\n\nconst notifySuccess = (msg) => {\n  toast.success(msg, {\n    position: toast.POSITION.TOP_CENTER\n    });\n}\n\nconst notifyError = (msg) => {\n  toast.error(msg, {\n    position: toast.POSITION.TOP_CENTER\n    });\n}\n\nconst Login = () => {\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              password: ''\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n              password: Yup.string().max(255).required('Password is required')\n            })}\n            onSubmit={(values) => {\n              AuthentService.login(values.email, values.password)\n              .then((res) => {\n                console.log(res)\n                if (res.status === 200) {\n                  return res.json()\n                }\n              })\n              .then((res) => {\n                if (res && res.accessToken) {\n                  console.log(res)\n                  useAuthStore.getState().login(res.accessToken, res.user)\n                  navigate('/app/dashboard', { replace: true });\n                  notifySuccess(\"Successfully logged in\")\n                }\n                if(res.error)\n                  notifyError(\"Login failed\")\n              })\n              .catch( (error) => {\n                notifyError(\"Login failed\")\n              })\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box sx={{ mb: 3 }}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Sign in\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Sign in on the platform\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box sx={{ py: 2 }}>\n                  <Button\n                    color=\"primary\"\n                    // disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign in now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Don&apos;t have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/register\"\n                    variant=\"h6\"\n                  >\n                    Sign up\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Login;\n","import { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Typography\n} from '@material-ui/core';\n\nconst NotFound = () => (\n  <>\n    <Helmet>\n      <title>404 | Material Kit</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center'\n      }}\n    >\n      <Container maxWidth=\"md\">\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"h1\"\n        >\n          404: The page you are looking for isn’t here\n        </Typography>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"subtitle2\"\n        >\n          You either tried some shady route or you came here by mistake.\n          Whichever it is, try using the navigation\n        </Typography>\n        <Box sx={{ textAlign: 'center' }}>\n          <img\n            alt=\"Under development\"\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            style={{\n              marginTop: 50,\n              display: 'inline-block',\n              maxWidth: '100%',\n              width: 560\n            }}\n          />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default NotFound;\n","import { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport { makeStyles, Theme, useTheme } from '@material-ui/core/styles';\nimport AuthentService from 'src/services/authentService';\nimport useAuthStore from 'src/stores/useAuthStore';\nimport { toast } from 'react-toastify';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: 500,\n  },\n}));\n\nconst notifySuccess = (msg) => {\n  toast.success(msg, {\n    position: toast.POSITION.TOP_CENTER\n    });\n}\n\nconst notifyError = (msg) => {\n  toast.error(msg, {\n    position: toast.POSITION.TOP_CENTER\n    });\n}\n\nconst Register = () => {\n  const navigate = useNavigate();\n\n  const theme = useTheme();\n  const classes = useStyles(theme);\n\n  return (\n    <>\n      <Helmet>\n        <title>Register</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <div className={classes.root}>\n            <Formik\n              initialValues={{\n                email: '',\n                name: '',\n                password: '',\n              }}\n              validationSchema={\n                Yup.object().shape({\n                  email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                  name: Yup.string().max(255).required('Name is required'),\n                  password: Yup.string().max(255).required('password is required'),\n                })\n              }\n              onSubmit={(values) => {\n                AuthentService.register(values.email, values.password, values.name)\n                .then((res) => {\n                  if (res.status === 200) {\n                    return res.json()\n                  }\n                })\n                .then((res) => {\n                  if (res && res.user) {\n                    console.log(res)\n                    useAuthStore.getState().login(res.accessToken, res.user)\n                    notifySuccess(\"Successfully registered\")\n                    navigate('/app/dashboard', { replace: true });\n                  }\n                  if(res.error)\n                    notifyError(\"Registration failed\")\n                })\n                .catch( (error) => {\n                  notifyError(\"Registration failed\")\n                })\n              }}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n                values\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <Box sx={{ mb: 3 }}>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"h2\"\n                    >\n                      Create new account\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      gutterBottom\n                      variant=\"body2\"\n                    >\n                      Use your email to create new account\n                    </Typography>\n                  </Box>\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Name\"\n                    margin=\"normal\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email Address\"\n                    margin=\"normal\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    margin=\"normal\"\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                  <Box sx={{ py: 2 }}>\n                    <Button\n                      color=\"primary\"\n                      fullWidth\n                      // disabled={isSubmitting}\n                      size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                    >\n                      Sign up now\n                    </Button>\n                  </Box>\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    Have an account?\n                    {' '}\n                    <Link\n                      component={RouterLink}\n                      to=\"/login\"\n                      variant=\"h6\"\n                    >\n                      Sign in\n                    </Link>\n                  </Typography>\n                </form>\n              )}\n            </Formik>\n          </div>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Register;","import PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Button,\n  Typography\n} from '@material-ui/core';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport AddShoppingCartOutlinedIcon from '@material-ui/icons/AddShoppingCartOutlined';\nimport { toast } from 'react-toastify';\nimport useShopCartStore from 'src/stores/useShopCartStore';\n\n\nconst toast_props = {\n  position: toast.POSITION.BOTTOM_RIGHT,\n  hideProgressBar: false,\n  draggable: true,\n  pauseOnFocusLoss: false,\n  pauseOnHover: false,\n  progress: undefined,\n}\n\nconst ProductCard = ({ product, ...rest }) => {\n  const addToCart = (product) => {\n    product.quantity = 1;\n    useShopCartStore.getState().addProduct(product)\n  \n    //@ts-ignore\n    toast.info(\n      <Box sx={{ p: 2 }}>\n        <Grid container spacing={2}\n          sx={{ justifyContent: 'space-between' }}>\n          <Grid item\n            xs={3}\n            sx={{\n              alignItems: 'left',\n              display: 'flex'\n            }}>\n              <Avatar\n                alt=\"Product\"\n                src={product.image}\n                variant=\"square\"\n              />\n          </Grid>\n          <Grid\n            xs={9}\n            item\n            sx={{\n              alignItems: 'right',\n              display: 'flex'\n            }}>\n            {product.name} Added to Shopping Cart\n          </Grid>\n        </Grid>\n      </Box>\n      , toast_props\n    );\n  }\n\n  return (\n    <Card\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      }}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            pb: 3\n          }}\n        >\n          <Avatar\n            alt=\"Product\"\n            src={\"https://www.mecofarma.com/media/catalog/product/e/9/e9fa45f889e9fc4973a2ce5cd6af0eeafbef945c_000245.png?quality=80&bg-color=255,255,255&fit=bounds&height=700&width=700&canvas=700:700&format=jpeg\"}\n            variant=\"square\"\n          />\n        </Box>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n          variant=\"h4\"\n        >\n          {product.name}\n        </Typography>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"body1\"\n        >\n          {product.supplier.name}\n        </Typography>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"body2\"\n        >\n          {product.description}\n        </Typography>\n      </CardContent>\n      <Box sx={{ flexGrow: 1 }} />\n      <Divider />\n      <Box sx={{ p: 2 }}>\n        <Grid\n          container\n          spacing={2}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid\n            item\n            sx={{\n              alignItems: 'center',\n              display: 'flex'\n            }}\n          >\n            <LocalOfferIcon color=\"primary\" />\n            <Typography\n              color=\"primary\"\n              display=\"inline\"\n              sx={{ pl: 1 }}\n              style={{fontSize: '1rem'}}\n              variant=\"body2\"\n            >\n              {product.price} €\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            sx={{\n              alignItems: 'center',\n              display: 'flex'\n            }}\n          >\n            <Button color=\"primary\" variant=\"contained\" onClick={() => addToCart(product)}>\n              <AddShoppingCartOutlinedIcon style={{color: \"white\"}} />\n              <Typography\n                style={{color: \"white\"}}\n                display=\"inline\"\n                sx={{ pl: 1 }}\n                variant=\"body2\"\n              >\n                Add\n              </Typography>\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Card>\n  )\n};\n\nProductCard.propTypes = {\n  product: PropTypes.object.isRequired\n};\n\nexport default ProductCard;\n","import { EXDELIVERY_API_BASE_URL } from '../config/index';\nimport useAuthStore from 'src/stores/useAuthStore';\n\n\nclass ProductService {\n\n\n    getAllProducts(){\n        return fetch(EXDELIVERY_API_BASE_URL + 'products', {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n                'accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization' : \"Bearer \"+ useAuthStore.getState().token\n            }\n        })\n    }\n\n    getProduct(id: any){\n        return fetch(EXDELIVERY_API_BASE_URL + 'products/' + id, {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n                'accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization' : \"Bearer \"+ useAuthStore.getState().token\n            }\n        })\n    }\n    addnewProduct(name:string, description: string,address:string, price: number, stock: number, photo: string, supplier: number ){\n\n        return fetch(EXDELIVERY_API_BASE_URL + 'products', {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                'accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization' : \"Bearer \"+ useAuthStore.getState().token\n            },\n            body: JSON.stringify({\n                name: name, \n                description: description, \n                address: address,\n                price: price, \n                stock: stock, \n                photo:photo, \n                supplier: supplier})\n        })\n    }\n\n    updateProduct(prodid:number ,name:string, description: string, price: number, stock: number, photo: string, supplier: number ){\n\n            return fetch(EXDELIVERY_API_BASE_URL + 'products/' + prodid, {\n                method: 'PUT',\n                mode: 'cors',\n                headers: {\n                    'accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization' : \"Bearer \"+ useAuthStore.getState().token\n                },\n                body: JSON.stringify({\n                    name: name, \n                    description: description, \n                    price: price, \n                    stock: stock, \n                    imageUrl:photo, \n                    supplier: supplier})\n            })\n}\n}\n\nexport default new ProductService();","import { v4 as uuid } from 'uuid';\n\nexport default [\n  {\n    id: uuid(),\n    supplier: 'Farmacia 1',\n    description: 'Dropbox is a file hosting service that offers cloud storage, file synchronization, a personal cloud.',\n    image: '/static/images/products/product_1.png',\n    name: 'Dropbox',\n    price: 25.42,\n    quantity: 1\n  },\n  {\n    id: uuid(),\n    supplier: 'Farmacia 2',\n    description: 'Medium is an online publishing platform developed by Evan Williams, and launched in August 2012.',\n    image: '/static/images/products/product_2.png',\n    name: 'Medium Corporation',\n    price: 30.99,\n    quantity: 1\n  },\n  {\n    id: uuid(),\n    supplier: 'Farmacia 3',\n    description: 'Slack is a cloud-based set of team collaboration tools and services, founded by Stewart Butterfield.',\n    image: '/static/images/products/product_3.png',\n    name: 'Slack',\n    price: 19.99,\n    quantity: 1\n  },\n  {\n    id: uuid(),\n    supplier: 'Farmacia 4',\n    description: 'Lyft is an on-demand transportation company based in San Francisco, California.',\n    image: '/static/images/products/product_4.png',\n    name: 'Lyft',\n    price: 9.99,\n    quantity: 1\n  },\n  {\n    id: uuid(),\n    supplier: 'Farmacia 5',\n    description: 'GitHub is a web-based hosting service for version control of code using Git.',\n    image: '/static/images/products/product_5.png',\n    name: 'GitHub',\n    price: 2.5,\n    quantity: 1\n  },\n  {\n    id: uuid(),\n    supplier: 'Farmacia 6',\n    description: 'Squarespace provides software as a service for website building and hosting. Headquartered in NYC.',\n    image: '/static/images/products/product_6.png',\n    name: 'Squarespace',\n    price: 51.99,\n    quantity: 1\n  }\n];\n","import { EXDELIVERY_API_BASE_URL} from '../config/index';\nimport useAuthStore from 'src/stores/useAuthStore';\n\n\nclass SupplierService {\n    getSuppliers() {\n        return fetch( EXDELIVERY_API_BASE_URL + \"suppliers\", {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n                'accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization' : \"Bearer \"+ useAuthStore.getState().token\n            },\n        })\n    }\n\n    addNewSupplier(name: string, lat: number, lon: number) {\n        return fetch( EXDELIVERY_API_BASE_URL + \"suppliers\", {\n            method: 'Post',\n            mode: 'cors',\n            headers: {\n                'accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization' : \"Bearer \"+ useAuthStore.getState().token\n            },\n            body: JSON.stringify({name: name, lat: lat, lon: lon})\n        })\n    }\n}\nexport default new SupplierService()","import { Helmet } from 'react-helmet';\nimport {useState, useEffect} from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { toast } from 'react-toastify';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Container,\n  Divider,\n  Grid,\n  makeStyles,\n  TextField,\n} from '@material-ui/core';\nimport ProductService from \"../services/productService\";\nimport SupplierService from \"../services/supplierService\";\nimport { number } from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    textAlign: 'center',\n    width: \"100%\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\"\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nconst notifySuccess = (msg) => {\n  toast.success(msg, {\n    position: toast.POSITION.TOP_CENTER\n    });\n}\n\nconst notifyError = (msg) => {\n  toast.error(msg, {\n    position: toast.POSITION.TOP_CENTER\n    });\n}\n\nconst AddProduct = () => {\n  const [supplierslist, setSuppliersList] = useState([]); \n  const [suplier, setSupplier] = useState(1);\n  const navigate = useNavigate();\n  const [image, setImage] = useState(\"\");\n\n  const handleSubmit = (supplier) => {\n    //@ts-ignore\n    let name: string = document.getElementById('prodname').value;\n    //@ts-ignore\n    let description: string = document.getElementById('proddescription').value;\n    //@ts-ignore\n    let address: string = document.getElementById('prodaddress').value;\n    //@ts-ignore\n    let stock: number = document.getElementById('prodstock').value;\n    //@ts-ignore\n    let price: number = document.getElementById('prodprice').value;\n    //@ts-ignore\n    let photo: string = document.getElementById('prodphoto').value;\n    ProductService.addnewProduct(name,description,address,price,stock,photo,supplier)\n      .then( (res) => {\n        return res.json();\n      })\n      .then( (res) => {\n        \n        if(res.error){\n          notifyError(\"Error Creating Product\")\n        }\n        else{\n          navigate('/app/dashboard', { replace: true });\n          notifySuccess(\"Success Adding new Product!\")\n        }\n      })\n      .catch( (error) => {\n        notifyError(\"Something went wrong\")\n      })\n  }\n\n  \n  const handleChange = (event) => {\n    setSupplier(event.target.value);\n  };\n  \n  const setImageUrl = (event) => {\n    setImage(event.target.value);\n  }\n  \n  useEffect( () => {\n    SupplierService.getSuppliers()\n      .then( (res) => {\n        return res.json()\n      })\n      .then( (res) => {\n        setSuppliersList(res)\n      })\n      .catch( () => {\n        notifyError(\"Something went wrong\")\n      })\n  }, [])\n\n  const classes = useStyles();\n  \n  return (\n    <>\n      <Helmet>\n        <title>Account</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              lg={12}\n              md={12}\n              xs={12}\n            >\n              <form\n                autoComplete=\"off\"\n                noValidate\n              >\n                <Card>\n                  <CardHeader\n                    subheader=\"Fill the form with product's information\"\n                    title=\"Add Product\"\n                  />\n                  <Divider />\n                  <CardContent>\n                    <Grid\n                      container\n                      spacing={1}\n                    >\n                      <Grid item\n                        md={4}\n                        xs={12}\n                        >\n                        <Box\n                          sx={{\n                            alignItems: 'center',\n                            display: 'flex',\n                            flexDirection: 'column'\n                          }}\n                        >\n                          <Avatar\n                            sx={{\n                              height: 160,\n                              width: 160\n                            }}\n                            src={image}\n                          />\n                        </Box>\n                        <div className={classes.root} >\n                        <TextField\n                            \n                            label=\"Image URL\"\n                            name=\"image\"\n                            required\n                            variant=\"outlined\"\n                            id=\"prodphoto\"\n                            onChange={setImageUrl}\n                          />\n                        </div>\n                      </Grid>\n                      <Grid\n                        pt={2}\n                        container\n                        md={8}\n                        xs={12}\n                        >\n                        <Grid\n                          item\n                          md={12}\n                          xs={12}\n                          mb={2}\n                        >\n                          <TextField\n                            fullWidth\n                            label=\"Product Name\"\n                            name=\"name\"\n                            required\n                            variant=\"outlined\"\n                            id=\"prodname\"\n                          />\n                        </Grid>\n                        <Grid\n                          item\n                          md={12}\n                          xs={12}\n                          mb={2}\n                          pb={2}\n                        >\n                          <TextField\n                            fullWidth\n                            label=\"Address\"\n                            name=\"address\"\n                            required\n                            variant=\"outlined\"\n                            id=\"prodaddress\"\n                          />\n                        </Grid>\n\n                        <Grid\n                          item\n                          lg={4}\n                          md={6}\n                          xs={6}\n                          mb={2}\n                          pr={1}\n                          pb={1}\n                        >\n                          <TextField\n                            fullWidth\n                            label=\"Stock\"\n                            name=\"stock\"\n                            type=\"number\"\n                            required\n                            variant=\"outlined\"\n                            id=\"prodstock\"\n                          />\n                        </Grid>\n                        <Grid\n                          item\n                          lg={4}\n                          md={6}\n                          xs={6}\n                          mb={2}\n                        >\n                          <TextField\n                            fullWidth\n                            label=\"Price (€)\"\n                            name=\"price\"\n                            type=\"number\"\n                            required\n                            variant=\"outlined\"\n                            id=\"prodprice\"\n                          />\n                        </Grid>\n                        <Grid\n                          item\n                          lg={4}\n                          md={6}\n                          xs={6}\n                          mb={2}\n                        >\n                          {supplierslist != null && supplierslist.length > 0 ? \n                          \n                          <FormControl className={classes.formControl}>\n                            <InputLabel htmlFor=\"age-native-simple\">Pharmacy</InputLabel>\n                            <Select\n                              native\n                              value={suplier}\n                              onChange={handleChange}\n                              inputProps={{\n                                name: 'Pharmacy',\n                                id: 'age-native-simple'\n                              }}\n                            >\n                              {supplierslist.map((item) => {\n                                return<option value={item.id}>{item.name}</option>\n                              })}\n                            </Select>\n                          </FormControl>\n                        : null  \n                        }\n                        </Grid>\n                      </Grid>\n                      <Grid\n                      style={{paddingLeft: '0px'}}\n                        item\n                        md={12}\n                        xs={12}\n                      >\n                        <TextField\n                          fullWidth\n                          \n                          label=\"Description\"\n                          name=\"description\"\n                          SelectProps={{ native: true }}\n                          variant=\"outlined\"\n                          multiline\n                          rows=\"3\"\n                          id=\"proddescription\"\n                        >\n                        </TextField>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                  <Divider />\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      justifyContent: 'flex-end',\n                      p: 2\n                    }}\n                  >\n                    <Button\n                      color=\"primary\"\n                      variant=\"contained\"\n                      onClick= {() => handleSubmit(suplier)}\n                    >\n                      Add Product\n          </Button>\n                  </Box>\n                </Card>\n              </form>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </>\n  );\n}\n\nexport default AddProduct;\n","import { Helmet } from 'react-helmet';\nimport { toast } from 'react-toastify';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Container,\n  Divider,\n  Grid,\n  makeStyles,\n  TextField,\n} from '@material-ui/core';\nimport SupplierService from \"../services/supplierService\";\nimport { useNavigate } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    textAlign: 'center',\n    width: \"100%\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\"\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nconst notifySuccess = (msg) => {\n  toast.success(msg, {\n    position: toast.POSITION.TOP_CENTER\n    });\n}\n\nconst notifyError = (msg) => {\n  toast.error(msg, {\n    position: toast.POSITION.TOP_CENTER\n    });\n}\n\n\n\n\n\nconst AddSupplier = () => {\n  const navigate = useNavigate();\n  \n  const handleSubmit = () => {\n    //@ts-ignore\n    let name: string = document.getElementById('supplier_name').value;\n    //@ts-ignore\n    let lat: number = document.getElementById('supplier_lat').value;\n    //@ts-ignore\n    let lon: number = document.getElementById('supplier_lon').value;\n  \n    SupplierService.addNewSupplier(name, lat, lon)\n      .then( (res) => {\n        return res.json();\n      })\n      .then( (res) => {\n        if(res.error){\n          notifyError(\"Failed adding a new supplier\")\n        } else{\n          navigate('/app/dashboard', { replace: true });\n          notifySuccess(\"Successfully added a new supplier\")\n        }\n      })\n      .catch( (error) => {\n        notifyError(\"Failed adding a new supplier\")\n      })\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Account</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              lg={8}\n              md={12}\n              xs={12}\n            >\n              <form\n                autoComplete=\"off\"\n                noValidate\n              >\n                <Card>\n                  <CardHeader\n                    subheader=\"Fill the form with supplier's information\"\n                    title=\"Add Supplier\"\n                  />\n                  <Divider />\n                  <CardContent>\n                    <Grid\n                      container\n                      spacing={1}\n                    >\n                      <Grid\n                        pt={2}\n                        container\n                        md={12}\n                        xs={12}\n                        >\n                        <Grid\n                          item\n                          md={12}\n                          xs={12}\n                          mb={2}\n                        >\n                          <TextField\n                            fullWidth\n                            label=\"Supplier Name\"\n                            name=\"name\"\n                            required\n                            variant=\"outlined\"\n                            id=\"supplier_name\"\n                          />\n                        </Grid>\n                        <Grid\n                          item\n                          md={12}\n                          xs={12}\n                          mb={2}\n\n                        >\n                          <TextField\n                            fullWidth\n                            label=\"Latitude\"\n                            name=\"latitude\"\n                            required\n                            type=\"number\"\n                            variant=\"outlined\"\n                            id=\"supplier_lat\"\n                          />\n                        </Grid>\n                        <Grid\n                          item\n                          md={12}\n                          xs={12}\n                          mb={2}\n\n                        >\n                          <TextField\n                            fullWidth\n                            label=\"Longitude\"\n                            name=\"longitude\"\n                            required\n                            type=\"number\"\n                            variant=\"outlined\"\n                            id=\"supplier_lon\"\n                          />\n                        </Grid>\n                    </Grid>\n                    </Grid>\n                  </CardContent>\n                  <Divider />\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      justifyContent: 'flex-end',\n                      p: 2\n                    }}\n                  >\n                    <Button\n                      color=\"primary\"\n                      variant=\"contained\"\n                      onClick= {() => handleSubmit()}\n                    >\n                      Add Supplier\n                    </Button>\n                  </Box>\n                </Card>\n              </form>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </>\n  );\n}\n\nexport default AddSupplier;\n","import {useEffect,useState} from 'react';\nimport { Helmet } from 'react-helmet';\nimport getInitials from 'src/utils/getInitials';\nimport products from 'src/__mocks__/products'\nimport order from 'src/__mocks__/order';\nimport { makeStyles } from '@material-ui/core/styles';\nimport StarRatings from 'react-star-ratings';\nimport {Avatar,\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    Divider,\n    Typography,\n    Container,\n    Grid,\n    TextField,\n    CardHeader,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n} from '@material-ui/core';\nimport { toast } from 'react-toastify';\nimport DeliveryService from \"src/services/deliveryService\";\nimport useAuthStore from 'src/stores/useAuthStore';\n\nconst styles = makeStyles ({\n    root: {\n      width: \"100%\",\n      overflowX: \"auto\",\n      \n    },\n    table: {\n        minWidth: 820,\n        marginLeft: \"5%\",\n    }\n  });\n\n\nconst notifySuccess = (msg) => {\n    toast.success(msg, {\n        position: toast.POSITION.TOP_CENTER\n    });\n}\n\nconst notifyError = (msg) => {\n    toast.error(msg, {\n        position: toast.POSITION.TOP_CENTER\n    });\n}\n\n  \nconst DeliveryDetails = () => {\n    const [price, setPrice] = useState(\"0.00\");\n    // maybe useful to check later on, if a user has already reviewed a product\n    const [review, setReview] = useState(null);\n    const  classes  = styles();\n    const [rating, setRating] = useState(0);\n    const [reviewdescription, setReviewDescription] = useState(\"\");\n    const [delivery, setDelivery] = useState(null);\n    const url = window.location.pathname;\n    const delivery_id = url.substring(url.lastIndexOf('/') + 1);\n\n    useEffect(() => {\n        console.log(useAuthStore.getState())\n        DeliveryService.getDelivery(delivery_id)\n          .then( (res) => {\n            if (res.status === 200) {\n              return res.json()\n            }\n            notifyError(\"Something went wrong\")\n            return null;\n          })\n          .then((res) => {\n            console.log(res)\n            if (res) {\n              setDelivery(res)\n            }\n          })\n          .catch(() => {\n            console.log(\"Something went wrong\")\n          })\n    }, [])\n\n    const confirmDelivery = () => {\n        DeliveryService.confirmDelivery(delivery_id)\n            .then( (res) => {\n                if (res.status === 200) {\n                return res.json()\n                }\n                notifyError(\"Something went wrong\")\n                return null;\n            })\n            .then((res) => {\n                console.log(res)\n                if (res) {\n                    setDelivery(res)\n                    notifySuccess(\"Successfully confirmed the delivery!\")\n                }\n            })\n            .catch(() => {\n                console.log(\"Something went wrong\")\n            })\n    }\n\n    const getTotalPrice = () => {\n        let totalPrice = 0;\n        for (let i = 0; i < products.length; i++) {\n            totalPrice += products[i].price * products[i].quantity;\n        }\n        setPrice(totalPrice.toFixed(2))\n    }\n    const changeRating = ( newRating, name ) => {\n        setRating(newRating);\n    }\n   \n    const handleReviewText = (event) => {\n        setReviewDescription(event.target.value)\n    } \n\n    useEffect(() => {\n        getTotalPrice()\n    }, [products])\n    return(\n        <>\n            <Helmet>\n            <title>Delivery Details</title>\n        </Helmet>\n        <Box\n            sx={{\n            backgroundColor: 'background.default',\n            minHeight: '100%',\n            py: 6\n            }}\n        >\n            <Grid container spacing={8}>\n        <Grid\n                item\n                lg={8}\n                md={8}\n                xs={8}\n            className={classes.root}\n            >\n                <form\n                autoComplete=\"off\"\n                noValidate\n                >\n                <Card className={classes.table}>\n                    <CardHeader\n                    title=\"Ordered Products\"\n                    />\n                    <Divider />\n                    <CardContent>\n                    <Grid\n                        container\n                        spacing={3}\n                    >\n                        <Grid\n                        item\n                        md={12}\n                        xs={12}\n                        >\n                    <Table>\n                        <TableHead>\n                        <TableRow>\n                            <TableCell>\n                            Name\n                            </TableCell>\n                            <TableCell>\n                            Reference\n                            </TableCell>\n                            <TableCell>\n                            Supplier\n                            </TableCell>\n                            <TableCell>\n                            Price\n                            </TableCell>\n                            <TableCell>\n                            Quantity\n                            </TableCell>\n                            <TableCell>\n                            Total\n                            </TableCell>\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {products.map((product) => (\n                                <>\n                                <TableRow\n                                hover\n                                key={product.id}\n                                >\n                                <TableCell>\n                                    <Box\n                                    sx={{\n                                        alignItems: 'center',\n                                        display: 'flex'\n                                    }}\n                                    >\n                                    <Avatar\n                                        src={product.image}\n                                        sx={{ mr: 2 }}\n                                    >\n                                        {getInitials(product.name)}\n                                    </Avatar>\n                                    <Typography\n                                        color=\"textPrimary\"\n                                        variant=\"body1\"\n                                    >\n                                        {product.name}\n                                    </Typography>\n                                    </Box>\n                                </TableCell>\n                                <TableCell>\n                                    {product.id}\n                                </TableCell>\n                                <TableCell>\n                                    {product.supplier}\n                                </TableCell>\n                                <TableCell>\n                                    {product.price}\n                                </TableCell>\n                                <TableCell>\n                                    \n                                    {product.quantity}\n                                </TableCell>\n                                <TableCell>\n                                    {(product.quantity * product.price).toFixed(2)}\n                                </TableCell>\n                                </TableRow>\n                                </>\n                                \n                            ))}\n                            <TableRow>\n                                    <TableCell colSpan={5}>\n                                    <Typography\n                                            alignContent='left'\n                                            color=\"textPrimary\"\n                                            variant=\"h6\"\n                                            >\n                                            Total\n                                    </Typography>\n                                    </TableCell>\n                                    <TableCell align=\"left\"  style={{'marginRight': '10%'}}>\n                                    <Typography\n                                            alignContent='left'\n                                            color=\"textPrimary\"\n                                            variant=\"h5\"\n                                            >\n                                                    {price}€\n                                                    </Typography>\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </Grid>\n                    </Grid>\n                    </CardContent>\n                    <Divider />\n                    \n                </Card>\n                </form>\n            </Grid>\n            <Grid\n                item\n                lg={4}\n                md={4}\n                xs={4}\n            >\n            <Card style= {{'marginRight': '10%'}}>\n            <CardHeader\n                    title=\"Order Details\"\n                    />\n                    <Divider />\n                <CardContent>\n                    <Grid\n                        item\n                        sm={12}\n                        md={12}\n                        xs={12}\n                        >\n                        <div>\n                            <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                                Delivery reference\n                            </Typography>\n                            <Typography variant=\"body2\" display=\"block\" gutterBottom>\n                                {delivery?.id}\n                            </Typography>\n                        </div>\n                    </Grid>\n                    \n                        <div>\n                            <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                                Delivery State\n                            </Typography>\n                            <Typography variant=\"body2\" display=\"block\" gutterBottom>\n                                {delivery?.state}\n                            </Typography>\n                        </div>\n                        <div>\n                            <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                                Delivery Location\n                            </Typography>\n                            <Typography variant=\"body2\" display=\"block\" gutterBottom>\n                                <p>Latitude: {delivery?.lat}</p>\n                                <p>Longitude: {delivery?.lon}</p>\n                            </Typography>\n                        </div>\n                    {delivery?.state == \"assigned\" && !useAuthStore.getState().user?.superUser ?\n                        <div>\n                            <Button  \n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => confirmDelivery()}\n                            >\n                                Confirm your delivery!\n                            </Button>\n                        </div>\n                    : \"\"}\n                </CardContent>\n            </Card>\n            </Grid>\n            </Grid>\n            </Box>\n        </>\n    )\n}\nexport default DeliveryDetails;","import { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/components/DashboardLayout';\nimport MainLayout from 'src/components/MainLayout';\nimport Account from 'src/pages/Account';\nimport CourierList from 'src/pages/CourierList';\nimport OrderList from 'src/pages/OrderList.tsx';\nimport AdminOrderList from 'src/pages/AdminOrderList.tsx';\nimport Dashboard from 'src/pages/Dashboard';\nimport Login from 'src/pages/Login.tsx';\nimport NotFound from 'src/pages/NotFound';\nimport ProductList from 'src/pages/ProductList.tsx';\nimport Register from 'src/pages/Register.tsx';\nimport Settings from 'src/pages/Settings';\nimport AddProduct from './pages/AddProduct.tsx';\nimport AddSupplier from './pages/AddSupplier.tsx';\nimport PharmacyProductDetails from './pages/PharmarcyProductDetails.tsx';\nimport ShoppingCart from './pages/ShoppingCart.tsx';\nimport DeliveryDetails from './pages/DeliveryDetails.tsx'\n\nconst routes = (token, isSuperUser) => [\n  {\n    path: 'app',\n    element: token ? <DashboardLayout /> : <Navigate to=\"/login\" />,\n    children: [\n      // Admin Only\n      { path: 'couriers', element: isSuperUser ? <CourierList />: <Navigate to=\"/404\" /> },\n      { path: 'adminOrders', element: isSuperUser ? <AdminOrderList />: <Navigate to=\"/404\" /> },\n      // Clients Only\n      { path: 'orders', element: !isSuperUser ? <OrderList />: <Navigate to=\"/404\" /> },\n      // Anyone\n      { path: 'dashboard', element: <Navigate to={ isSuperUser ? \"/app/adminOrders\" : \"/app/orders\"} />/*<Dashboard />*/ },\n      { path: 'delivery/:id', element: <DeliveryDetails />},\n      { path: '*', element: <Navigate to=\"/404\" /> },\n    ]\n  },\n  {\n    path: '/',\n    element: !token ? <MainLayout /> : <Navigate to=\"/app/dashboard\" />,\n    children: [\n      { path: 'login', element: <Login /> },\n      { path: 'register', element: <Register /> },\n      { path: '404', element: <NotFound /> },\n      { path: '/', element: <Navigate to=\"/app/dashboard\" /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  }\n];\n\nexport default routes;\n","import 'react-perfect-scrollbar/dist/css/styles.css';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport 'src/mixins/chartjs';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\nimport { PersistGate } from 'zustand-persist'\nimport useAuthStore from 'src/stores/useAuthStore';\nimport useShopCartStore from 'src/stores/useShopCartStore';\n\nconst App = () => {\n  useAuthStore();\n  useShopCartStore();\n  const token = useAuthStore(state => state.token);\n  const user = useAuthStore(state => state.user);\n  const routing = useRoutes(routes(token, user?.superUser));\n\n  return (\n    <PersistGate>\n      <ThemeProvider theme={theme}>\n        <GlobalStyles />\n        {routing}\n      </ThemeProvider>\n    </PersistGate>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n    <ToastContainer\n      position=\"bottom-right\"\n      autoClose={5000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable\n      pauseOnHover={false}\n    />\n  </BrowserRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}
version: '3.2'

# Define services
services:
  # App backend service
  app-server-del:
    # Configuration for building the docker image for the backend service
    build:
      context: backend/ # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - db-del
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://db-del:3360/exdelivery
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin_pass
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend-del

  app-client-del:
    build:
      context: projWebsite # Use an image built from the specified dockerfile in the `polling-app-client` directory.
      dockerfile: Dockerfile
      args:
        REACT_APP_API_BASE_URL: http://127.0.0.1:3000/
    ports:
      - "3000:3000"
    restart: always
    depends_on:
      - app-server-del
    networks:
      - frontend-del

  # Database Service (Mysql)
  db-del:
    image: mysql:5.7
    ports:
      - "3360:3306"
    restart: always
    environment:
      MYSQL_DATABASE: exdelivery
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin_pass
      MYSQL_ROOT_PASSWORD: 0x1c0e6ae
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend-del

# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend-del:
  frontend-del: